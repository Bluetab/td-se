use Mix.Config

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we use it
# with brunch.io to recompile .js and .css sources.

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# command from your terminal:
#
#     openssl req -new -newkey rsa:4096 -days 365 -nodes -x509 -subj "/C=US/ST=Denial/L=Springfield/O=Dis/CN=www.example.com" -keyout priv/server.key -out priv/server.pem
#
# The `http:` config above can be replaced with:
#
#     https: [port: 4000, keyfile: "priv/server.key", certfile: "priv/server.pem"],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

config :td_se, TdSeWeb.Endpoint,
  http: [port: 4006],
  url: [host: "localhost", port: 4006],
  debug_errors: true,
  code_reloader: true,
  check_origin: false,
  watchers: []

config :td_se, :elasticsearch,
  search_service: TdSe.Search,
  es_host: "localhost",
  es_port: 9200,
  type_name: "doc"

config :td_se, :elastic_indexes,
  data_structure_index: "data_structure",
  business_concept_index: "business_concept",
  ingest_index: "ingest"

config :td_perms, redis_uri: "redis://localhost"

